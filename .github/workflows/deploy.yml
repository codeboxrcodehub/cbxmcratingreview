name: Deploy to WordPress.org

on:
  push:
    tags:
      - "*"

env:
  SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
  SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  extract-release-notes:
    name: Extract Release Notes
    runs-on: ubuntu-latest
    outputs:
      release_notes: ${{ steps.release_notes.outputs.release_notes }}
    steps:
      - uses: actions/checkout@v3

      - name: Find Readme File
        id: find_readme
        run: |
          for file in readme.txt Readme.txt README.txt README.md Readme.md readme.md; do
            if [ -f "$file" ]; then
              echo "readme_file=$file" >> $GITHUB_ENV
              break
            fi
          done

          source $GITHUB_ENV

          if [ -z "$readme_file" ]; then
            echo "::error::Readme file not found."
            exit 1
          fi

      - name: Extract Release Notes
        id: release_notes
        run: |
          changelog_section_start="== Changelog =="
          readme_file="$readme_file"

          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            plugin_version="${GITHUB_REF#refs/tags/}"
          else
            echo "::error::This workflow must be triggered by a tag push."
            exit 1
          fi

          in_changelog=0
          found_version=0
          release_notes=""

          while IFS= read -r line; do
            if [[ "$line" == "$changelog_section_start" ]]; then
              in_changelog=1
              continue
            fi

            if [[ $in_changelog -eq 0 ]]; then
              continue
            fi

            if [[ "$line" == "= ${plugin_version} =" ]]; then
              found_version=1
              continue
            fi

            if [[ $found_version -eq 1 ]] && echo "$line" | grep -qE '^= [0-9]+\.[0-9]+\.[0-9]+ =$'; then
              break
            fi

            if [[ $found_version -eq 1 ]] && echo "$line" | grep -qE '^\*'; then
              release_notes+="${line}\n"
              continue
            fi
          done < "$readme_file"

          if [[ -z "$release_notes" ]]; then
            echo "::error::Failed to extract release notes for version ${plugin_version}."
            exit 1
          fi

          # Output in a format usable by later jobs
          release_notes="${release_notes//'%'/'%25'}"
          release_notes="${release_notes//$'\n'/'%0A'}"
          release_notes="${release_notes//$'\r'/'%0D'}"
          echo "release_notes=$release_notes" >> $GITHUB_OUTPUT

  update-trunk:
    name: Update trunk in WordPress SVN
    runs-on: ubuntu-latest
    needs: extract-release-notes
    steps:
      - uses: actions/checkout@v3

      - name: Install SVN
        run: |
          sudo apt-get update
          sudo apt-get install -y subversion

      - name: Deploy to trunk
        uses: 10up/action-wordpress-plugin-deploy@stable
        with:
          skip-tags: true
          generate-zip: false

  tag-release:
    name: Tag SVN Release
    runs-on: ubuntu-latest
    needs: update-trunk
    steps:
      - uses: actions/checkout@v3

      - name: Install SVN
        run: |
          sudo apt-get update
          sudo apt-get install -y subversion

      - name: Extract Plugin Version
        id: version
        run: |
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Deploy tag
        uses: 10up/action-wordpress-plugin-deploy@stable
        with:
          skip-trunk: true
          skip-assets: true
          generate-zip: false
          tag: ${{ steps.version.outputs.version }}

  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [tag-release, extract-release-notes]
    steps:
      - uses: actions/checkout@v3

      - name: Extract Plugin Version
        id: version
        run: |
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create ZIP Archive
        run: |
          zip -r "${{ github.event.repository.name }}.zip" . -x ".git/*" ".github/*"

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: ${{ steps.version.outputs.version }}
          body: ${{ needs.extract-release-notes.outputs.release_notes }}
          files: ${{ github.event.repository.name }}.zip
